

package org.drools.planner.RepartitionIntervention.solver;
    dialect "java"

import org.drools.planner.core.score.buildin.hardandsoft.HardAndSoftScoreHolder;
import org.drools.planner.core.score.constraint.IntConstraintOccurrence;
import org.drools.planner.core.score.constraint.ConstraintType;

import org.drools.planner.RepartitionIntervention.domain.Intervenant;
import org.drools.planner.RepartitionIntervention.domain.Intervention;
import org.drools.planner.RepartitionIntervention.domain.RepartirIntervention;

global HardAndSoftScoreHolder scoreHolder;

// ############################################################################
// Hard constraints (à revoir)
// ############################################################################

rule "totalDureeInterventionDemande"
    when
        $intervenant : Intervenant($dureeIntervention : dureeIntervention)
        //on fait la somme des durées d'intervention demandées
        $totalDureeInterventionDemande : Number(intValue > $dureeIntervention) from accumulate(
			Intervention(
                intervenant == $intervenant,
                $dureeInterventionDemande : dureeInterventionDemande),
            sum($dureeInterventionDemande)
        )
    then
       insertLogical(new IntConstraintOccurrence("totalDureeInterventionDemande", ConstraintType.NEGATIVE_HARD,
                8,
                $intervenant));
end

rule "sameIntervenant"
    when  	
        $intervenant : Intervenant($typeIntervenant : typeIntervenant)
    	$intervention: Intervention (typeIntervenantDemande==$typeIntervenant)
    then
        insertLogical(new IntConstraintOccurrence("sameIntervenant", ConstraintType.NEGATIVE_HARD,
               3,
                $intervenant));
end

// ############################################################################
// Soft constraints (à revoir)
// ############################################################################

rule "primeIntervenant"
    when
        $intervention : Intervention($typeIntervenantDemande : typeIntervenantDemande, $dureeInterventionDemande:dureeInterventionDemande>40) 
    then
        insertLogical(new IntConstraintOccurrence("primeIntervenant", ConstraintType.NEGATIVE_SOFT,
                $intervention));
		System.out.println("Prime accordée pour l'intervenant "+ $typeIntervenantDemande);
end

// ############################################################################
// Calculate score
// ############################################################################

// Accumulate hard constraints
rule hardConstraintsBroken
        salience -1 // Do the other rules first (optional, for performance)
    when
        $hardTotal : Number() from accumulate(
            IntConstraintOccurrence(constraintType == ConstraintType.NEGATIVE_HARD, $weight : weight),
            sum($weight) // Vote for http://jira.jboss.com/jira/browse/JBRULES-1075
        )
    then
        scoreHolder.setHardConstraintsBroken($hardTotal.intValue());
end

// Accumulate soft constraints
rule softConstraintsBroken
        salience -1 // Do the other rules first (optional, for performance)
    when
        $softTotal : Number() from accumulate(
            IntConstraintOccurrence(constraintType == ConstraintType.NEGATIVE_SOFT, $weight : weight),
            sum($weight) // Vote for http://jira.jboss.com/jira/browse/JBRULES-1075
        )
    then
        scoreHolder.setSoftConstraintsBroken($softTotal.intValue());
end
